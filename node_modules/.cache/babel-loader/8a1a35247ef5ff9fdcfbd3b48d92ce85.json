{"ast":null,"code":"var _jsxFileName = \"C:\\\\CodingDojo\\\\projects\\\\portfolio\\\\portfolio\\\\src\\\\components\\\\Contact.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport SendIcon from '@mui/icons-material/Send';\nimport '../css/Contact.css';\nimport EmailIcon from '@mui/icons-material/Email';\nimport ContactPhoneIcon from '@mui/icons-material/ContactPhone';\nimport { useRef } from 'react';\nimport { init } from '@emailjs/browser';\nimport emailjs from '@emailjs/browser';\nimport { useHistory } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\ninit(\"YAhkeZrMmmQoUvmG_\");\n\nconst Contact = () => {\n  _s();\n\n  let [name, setName] = useState(\"\");\n  let [email, setEmail] = useState(\"\");\n  let [message, setMessage] = useState(\"\");\n  const history = useHistory();\n  const form = useRef();\n\n  function store(key, value, expire) {\n    let obj = {\n      time: new Date().getTime(),\n      value: value,\n      expire: expire\n    }; // You can only store strings\n\n    let objStr = JSON.stringify(obj);\n    localStorage.setItem(key, objStr);\n  }\n\n  const handleChange = e => {\n    e.preventDefault(); // localStorage.clear()\n\n    console.log(localStorage.getItem(\"emails\"));\n\n    if (!localStorage.getItem(\"emails\")) {\n      localStorage.setItem(\"emails\", 1);\n    } else {\n      localStorage.setItem(\"emails\", parseInt(localStorage.getItem(\"emails\")) + 1);\n    }\n\n    console.log(localStorage.getItem(\"emails\")); //86,400,000\n    // let d = new Date()\n\n    let h = Date.now();\n    console.log(h);\n\n    if (!localStorage.getItem(\"date\")) {\n      localStorage.setItem(\"date\", h);\n    }\n\n    let num_of_emails = parseInt(localStorage.getItem(\"emails\"));\n    let date = localStorage.getItem(\"date\");\n\n    if (num_of_emails < 3) {\n      console.log(\"send a email\"); // emailjs.sendForm('service_rios4wr', 'template_g0vvpc2', form.current, 'YAhkeZrMmmQoUvmG_')\n      //   .then((result) => {\n      //       console.log(result.text);\n      //       history.push(\"/\")\n      //   }, (error) => {\n      //       console.log(\"ERROR\" + error.text);\n      //   });\n    } else {\n      console.log(\"too many requests\"); //localstorage.getItem(\"date\") -> minus current date.now() if that is great than 86,400,000 then its been over 24 hours\n\n      let newtime = Date.now();\n\n      if (h - newtime > 10000) {\n        //its been 24 hours\n        console.log(\"minute passed\");\n        localStorage.clear();\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"contact expand-contact\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      ref: form,\n      onSubmit: handleChange,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"blur-contact \",\n        children: \"Contact\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        className: \"m-2 txtField blur-contact \",\n        id: \"outlined-multiline-flexible\",\n        label: \"Name\",\n        placeholder: \"Name\",\n        name: \"name\",\n        required: true,\n        multiline: true,\n        maxRows: 4,\n        onChange: e => {\n          setName(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        className: \"m-2 txtField blur-contact \",\n        id: \"outlined-multiline-flexible\",\n        label: \"Email\",\n        placeholder: \"Email\",\n        name: \"email\",\n        type: \"email\",\n        required: true,\n        multiline: true,\n        maxRows: 4,\n        onChange: e => {\n          setEmail(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          className: \"txtArea m-2 mb-4 blur-contact-txt \",\n          id: \"outlined-multiline-static\",\n          label: \"Message\",\n          placeholder: \"Message\",\n          name: \"message\",\n          required: true,\n          multiline: true,\n          rows: 4,\n          onChange: e => {\n            setMessage(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          type: \"submit\",\n          className: \"blur-contact-button\",\n          endIcon: /*#__PURE__*/_jsxDEV(SendIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 92\n          }, this),\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"email blur-contact-p \",\n      children: [/*#__PURE__*/_jsxDEV(EmailIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 42\n      }, this), \" Email: konstantinos.mazarakis25@gmail.com\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"phone blur-contact-p2 \",\n      children: [/*#__PURE__*/_jsxDEV(ContactPhoneIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 43\n      }, this), \" Phone Number: 312-763-0955\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 11\n  }, this);\n};\n\n_s(Contact, \"fg1KoJTbFyQ1vYOwNn6zvAB0HFU=\", false, function () {\n  return [useHistory];\n});\n\n_c = Contact;\nexport default Contact;\n\nvar _c;\n\n$RefreshReg$(_c, \"Contact\");","map":{"version":3,"sources":["C:/CodingDojo/projects/portfolio/portfolio/src/components/Contact.jsx"],"names":["React","useState","useEffect","Box","TextField","Button","SendIcon","EmailIcon","ContactPhoneIcon","useRef","init","emailjs","useHistory","Contact","name","setName","email","setEmail","message","setMessage","history","form","store","key","value","expire","obj","time","Date","getTime","objStr","JSON","stringify","localStorage","setItem","handleChange","e","preventDefault","console","log","getItem","parseInt","h","now","num_of_emails","date","newtime","clear","target"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport TextField from '@mui/material/TextField';\r\nimport Button from '@mui/material/Button';\r\nimport SendIcon from '@mui/icons-material/Send';\r\nimport '../css/Contact.css';\r\nimport EmailIcon from '@mui/icons-material/Email';\r\nimport ContactPhoneIcon from '@mui/icons-material/ContactPhone';\r\nimport { useRef } from 'react';\r\nimport { init } from '@emailjs/browser';\r\nimport emailjs from '@emailjs/browser';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\ninit(\"YAhkeZrMmmQoUvmG_\");\r\n\r\nconst Contact = () => {\r\n  let [name, setName] = useState(\"\")\r\n  let [email, setEmail] = useState(\"\")\r\n  let [message, setMessage] = useState(\"\")\r\n  const history = useHistory()\r\n  const form = useRef();\r\n\r\n\r\n  function store(key, value, expire) {\r\n    let obj = {\r\n      time: new Date().getTime(),\r\n      value: value,\r\n      expire: expire,\r\n    }\r\n    // You can only store strings\r\n    let objStr = JSON.stringify(obj);\r\n    localStorage.setItem(key, objStr);\r\n  }\r\n\r\n\r\n\r\n  const handleChange = (e) => {\r\n    e.preventDefault();\r\n    // localStorage.clear()\r\n    console.log(localStorage.getItem(\"emails\"))\r\n    if (!localStorage.getItem(\"emails\")) {\r\n      localStorage.setItem(\"emails\", 1)\r\n    } else {\r\n      localStorage.setItem(\"emails\", parseInt(localStorage.getItem(\"emails\")) + 1)\r\n    }\r\n    console.log(localStorage.getItem(\"emails\"))\r\n\r\n\r\n    //86,400,000\r\n    // let d = new Date()\r\n    let h = Date.now();\r\n    console.log(h)\r\n    if (!localStorage.getItem(\"date\")) {\r\n      localStorage.setItem(\"date\", h)\r\n    }\r\n\r\n\r\n    let num_of_emails = parseInt(localStorage.getItem(\"emails\"))\r\n    let date = localStorage.getItem(\"date\")\r\n    if (num_of_emails < 3) {\r\n\r\n      console.log(\"send a email\")\r\n      // emailjs.sendForm('service_rios4wr', 'template_g0vvpc2', form.current, 'YAhkeZrMmmQoUvmG_')\r\n      //   .then((result) => {\r\n      //       console.log(result.text);\r\n      //       history.push(\"/\")\r\n      //   }, (error) => {\r\n      //       console.log(\"ERROR\" + error.text);\r\n      //   });\r\n    } else {\r\n      console.log(\"too many requests\");\r\n\r\n      //localstorage.getItem(\"date\") -> minus current date.now() if that is great than 86,400,000 then its been over 24 hours\r\n      let newtime = Date.now();\r\n      if (h - newtime > 10000) {\r\n        //its been 24 hours\r\n        console.log(\"minute passed\")\r\n        localStorage.clear()\r\n      }\r\n    }\r\n\r\n  };\r\n\r\n  return (<div className='contact expand-contact'>\r\n    <form ref={form} onSubmit={handleChange} >\r\n      <h1 className='blur-contact '>Contact</h1>\r\n      <TextField\r\n        className='m-2 txtField blur-contact '\r\n        id=\"outlined-multiline-flexible\"\r\n        label=\"Name\"\r\n        placeholder='Name'\r\n        name='name'\r\n        required\r\n        multiline\r\n        maxRows={4}\r\n        onChange={(e) => { setName(e.target.value) }} />\r\n      <TextField\r\n        className='m-2 txtField blur-contact '\r\n        id=\"outlined-multiline-flexible\"\r\n        label=\"Email\"\r\n        placeholder='Email'\r\n        name='email'\r\n        type=\"email\"\r\n        required\r\n        multiline\r\n        maxRows={4}\r\n        onChange={(e) => { setEmail(e.target.value) }} />\r\n      <div>\r\n\r\n        <TextField\r\n          className='txtArea m-2 mb-4 blur-contact-txt '\r\n          id=\"outlined-multiline-static\"\r\n          label=\"Message\"\r\n          placeholder='Message'\r\n          name='message'\r\n          required\r\n          multiline\r\n          rows={4}\r\n          onChange={(e) => { setMessage(e.target.value) }} />\r\n      </div>\r\n      <div>\r\n        <Button variant=\"contained\" type='submit' className='blur-contact-button' endIcon={<SendIcon />}>\r\n          Send\r\n        </Button>\r\n      </div>\r\n    </form>\r\n    <p className='email blur-contact-p '><EmailIcon></EmailIcon> Email: konstantinos.mazarakis25@gmail.com</p>\r\n    <p className='phone blur-contact-p2 '><ContactPhoneIcon></ContactPhoneIcon> Phone Number: 312-763-0955</p>\r\n\r\n  </div>\r\n  );\r\n}\r\nexport default Contact\r\n"]},"metadata":{},"sourceType":"module"}